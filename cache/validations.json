{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/RewardsVault.sol:RewardsVault": {
        "src": "contracts\\RewardsVault.sol:13",
        "version": {
          "withMetadata": "55c7f5d3d806947696eb215ebdca46a23d06b56cd77a6f8f62401da8723193da",
          "withoutMetadata": "2056549afd76c5a798b262c7291bdb70f40870d9701b1ab3d8f51d556218cf73",
          "linkedWithoutMetadata": "2056549afd76c5a798b262c7291bdb70f40870d9701b1ab3d8f51d556218cf73"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/interfaces/IGreenChainSystem.sol:IRewardsVault"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositReward(uint256,uint256)",
          "withdrawReward(uint256,uint256)",
          "getRewardBalance(uint256)",
          "getTotalRewards()",
          "getCouponInventoryStatus(uint256)",
          "hasSufficientInventory(uint256,uint256)",
          "getCouponsWithInventory()",
          "emergencyWithdraw(uint256,uint256)",
          "updateContractAddresses(address,address)",
          "pause()",
          "unpause()",
          "manageInventory(uint256,uint8,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RewardsVault",
            "src": "contracts\\RewardsVault.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "_couponInventory",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RewardsVault",
              "src": "contracts\\RewardsVault.sol:16"
            },
            {
              "label": "_totalRewards",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "RewardsVault",
              "src": "contracts\\RewardsVault.sol:19"
            },
            {
              "label": "couponExchange",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "RewardsVault",
              "src": "contracts\\RewardsVault.sol:22"
            },
            {
              "label": "participantRegistry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RewardsVault",
              "src": "contracts\\RewardsVault.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:IBadgeNFT": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:67",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mintBadge(address,string,string,string,string)",
          "getBadge(uint256)",
          "getUserBadges(address)",
          "updateBadge(uint256,string)",
          "burnBadge(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:ICouponExchange": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:89",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createCoupon(string,string,uint256,uint256,string,uint256)",
          "purchaseCoupon(uint256)",
          "redeemCoupon(uint256)",
          "getCoupon(uint256)",
          "getUserCoupons(address)",
          "getAvailableCoupons()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:IParticipantRegistry": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerParticipant(string)",
          "updateParticipant(address,uint256,uint256,string)",
          "getParticipant(address)",
          "isRegistered(address)",
          "getTotalParticipants()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:IPointsToken": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256,string)",
          "burn(address,uint256,string)",
          "transferPoints(address,address,uint256)",
          "balanceOf(address)",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:IRewardsVault": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:123",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositReward(uint256,uint256)",
          "withdrawReward(uint256,uint256)",
          "getRewardBalance(uint256)",
          "getTotalRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:ITierManager": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calculateTier(uint256)",
          "getTierInfo(uint8)",
          "getTierMultiplier(uint8)",
          "getTierCouponBonus(uint8)",
          "updateTierConfig(uint8,(uint256,uint256,uint256,uint256,bool,bool,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/RewardsVault.sol:RewardsVault": {
        "src": "contracts\\RewardsVault.sol:13",
        "version": {
          "withMetadata": "9350fb3b494460fad639b5cdac48302cf39da21bc1520c43648891055f0faa31",
          "withoutMetadata": "edd2947e43fd3224f4eb5a3a7d8b5b6f31ad4d5159b91a569e41829b14b13bf5",
          "linkedWithoutMetadata": "edd2947e43fd3224f4eb5a3a7d8b5b6f31ad4d5159b91a569e41829b14b13bf5"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/interfaces/IGreenChainSystem.sol:IRewardsVault"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositReward(uint256,uint256)",
          "withdrawReward(uint256,uint256)",
          "getRewardBalance(uint256)",
          "getTotalRewards()",
          "getCouponInventoryStatus(uint256)",
          "hasSufficientInventory(uint256,uint256)",
          "getCouponsWithInventory()",
          "emergencyWithdraw(uint256,uint256)",
          "updateContractAddresses(address,address)",
          "pause()",
          "unpause()",
          "manageInventory(uint256,uint8,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RewardsVault",
            "src": "contracts\\RewardsVault.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "_couponInventory",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RewardsVault",
              "src": "contracts\\RewardsVault.sol:16"
            },
            {
              "label": "_totalRewards",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "RewardsVault",
              "src": "contracts\\RewardsVault.sol:19"
            },
            {
              "label": "couponExchange",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "RewardsVault",
              "src": "contracts\\RewardsVault.sol:22"
            },
            {
              "label": "participantRegistry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RewardsVault",
              "src": "contracts\\RewardsVault.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:IBadgeNFT": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:67",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mintBadge(address,string,string,string,string)",
          "getBadge(uint256)",
          "getUserBadges(address)",
          "updateBadge(uint256,string)",
          "burnBadge(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:ICouponExchange": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:89",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createCoupon(string,string,uint256,uint256,string,uint256)",
          "purchaseCoupon(uint256)",
          "redeemCoupon(uint256)",
          "getCoupon(uint256)",
          "getUserCoupons(address)",
          "getAvailableCoupons()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:IParticipantRegistry": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerParticipant(string)",
          "updateParticipant(address,uint256,uint256,string)",
          "getParticipant(address)",
          "isRegistered(address)",
          "getTotalParticipants()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:IPointsToken": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256,string)",
          "burn(address,uint256,string)",
          "transferPoints(address,address,uint256)",
          "balanceOf(address)",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:IRewardsVault": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:123",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositReward(uint256,uint256)",
          "withdrawReward(uint256,uint256)",
          "getRewardBalance(uint256)",
          "getTotalRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:ITierManager": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calculateTier(uint256)",
          "getTierInfo(uint8)",
          "getTierMultiplier(uint8)",
          "getTierCouponBonus(uint8)",
          "updateTierConfig(uint8,(uint256,uint256,uint256,uint256,bool,bool,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC4906.sol:10",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:34"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\utils\\ERC721Utils.sol:16",
        "version": {
          "withMetadata": "b4c81ef105354bd1986e1d565841a38c27bd22d9783130ca2c4ca09406c5c971",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Panic.sol:Panic": {
        "src": "@openzeppelin\\contracts\\utils\\Panic.sol:26",
        "version": {
          "withMetadata": "475e216dbfbf13634f5a46a1e2b9e7eb3380f89234a7854491859eeaf40149d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:13",
        "version": {
          "withMetadata": "4055dada653e57c9dfa9e626ea89be4d93bc703fc86d8f305e39457c0c3b6e46",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:12",
        "version": {
          "withMetadata": "72f841a753df86b24f0efc2c28b0a02e06fe53badfa2162f367375b7041d3b1f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/Panic.sol:Panic"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeCast.sol:19",
        "version": {
          "withMetadata": "d581c33288cfa4779579536496bb900e06fbf31524ea3ebb013c8a4eff6279bd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:11",
        "version": {
          "withMetadata": "3a7a073fb49a215e66242c641d2dcc99bcd8f9b000228f6c75358cfcbefa4a94",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BadgeNFT.sol:BadgeNFT": {
        "src": "contracts\\BadgeNFT.sol:14",
        "version": {
          "withMetadata": "9c70f63dc2617569b9aabc36b2810176b5b18e8bdc7b1a11c342fdb20a0cbc78",
          "withoutMetadata": "14b7978a9afa181c111a57a7871ed43f36a18ad96a34093c85511daf72152260",
          "linkedWithoutMetadata": "14b7978a9afa181c111a57a7871ed43f36a18ad96a34093c85511daf72152260"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/interfaces/IGreenChainSystem.sol:IBadgeNFT"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "mintBadge(address,string,string,string,string)",
          "getBadge(uint256)",
          "getBadgeMetadata(uint256)",
          "getUserBadges(address)",
          "updateBadge(uint256,string)",
          "burnBadge(uint256)",
          "updateContractAddresses(address,address)",
          "pause()",
          "unpause()",
          "tokenURI(uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BadgeNFT",
            "src": "contracts\\BadgeNFT.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:34"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:23"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BadgeNFT",
              "src": "contracts\\BadgeNFT.sol:15"
            },
            {
              "label": "_badges",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(Badge)12133_storage)",
              "contract": "BadgeNFT",
              "src": "contracts\\BadgeNFT.sol:16"
            },
            {
              "label": "_userBadges",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "BadgeNFT",
              "src": "contracts\\BadgeNFT.sol:17"
            },
            {
              "label": "participantRegistry",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "BadgeNFT",
              "src": "contracts\\BadgeNFT.sol:19"
            },
            {
              "label": "tierManager",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "BadgeNFT",
              "src": "contracts\\BadgeNFT.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Badge)12133_storage)": {
              "label": "mapping(uint256 => struct IBadgeNFT.Badge)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Badge)12133_storage": {
              "label": "struct IBadgeNFT.Badge",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "badgeType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "imageURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "earnedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CouponExchange.sol:CouponExchange": {
        "src": "contracts\\CouponExchange.sol:13",
        "version": {
          "withMetadata": "20a4e947623c67d3d35891a99e421ec8c461f097d2d7dd51aeb2800db29b39b7",
          "withoutMetadata": "9a4825deb103991683a3821fac1db563e6177aa60b076b8f0825dd43c096ada3",
          "linkedWithoutMetadata": "9a4825deb103991683a3821fac1db563e6177aa60b076b8f0825dd43c096ada3"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/interfaces/IGreenChainSystem.sol:ICouponExchange"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "createCoupon(string,string,uint256,uint256,string,uint256)",
          "purchaseCoupon(uint256)",
          "redeemCoupon(uint256)",
          "getCoupon(uint256)",
          "getUserCoupons(address)",
          "getAvailableCoupons()",
          "getCouponWithTierBonus(uint256,address)",
          "updateCoupon(uint256,bool)",
          "updateContractAddresses(address,address,address,address)",
          "pause()",
          "unpause()",
          "updateExchangeRates(uint256,uint256,uint256)",
          "validateRedemption(uint256,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CouponExchange",
            "src": "contracts\\CouponExchange.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "_couponIds",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:14"
            },
            {
              "label": "_userCouponIdCounter",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:15"
            },
            {
              "label": "_coupons",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_struct(Coupon)12210_storage)",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:17"
            },
            {
              "label": "_userCoupons",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(UserCoupon)12223_storage)",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:18"
            },
            {
              "label": "_userCouponIds",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:19"
            },
            {
              "label": "_couponUserCoupons",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:20"
            },
            {
              "label": "pointsToken",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:22"
            },
            {
              "label": "participantRegistry",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:23"
            },
            {
              "label": "tierManager",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:24"
            },
            {
              "label": "rewardsVault",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Coupon)12210_storage)": {
              "label": "mapping(uint256 => struct ICouponExchange.Coupon)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(UserCoupon)12223_storage)": {
              "label": "mapping(uint256 => struct ICouponExchange.UserCoupon)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Coupon)12210_storage": {
              "label": "struct ICouponExchange.Coupon",
              "members": [
                {
                  "label": "couponId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "pointsCost",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "category",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "maxSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "currentSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(UserCoupon)12223_storage": {
              "label": "struct ICouponExchange.UserCoupon",
              "members": [
                {
                  "label": "couponId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "purchaseDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isRedeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "redemptionDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "redemptionCode",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/ParticipantRegistry.sol:ParticipantRegistry": {
        "src": "contracts\\ParticipantRegistry.sol:13",
        "version": {
          "withMetadata": "a290d84f72aa8865677e1ae355f3ef7f7750c1d520002c286f2b42c63bebf615",
          "withoutMetadata": "5cab27a6f7f8c84b53a7e5e1a66811263bb4cc1c71ddad557e83e7b052c34af4",
          "linkedWithoutMetadata": "5cab27a6f7f8c84b53a7e5e1a66811263bb4cc1c71ddad557e83e7b052c34af4"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/interfaces/IGreenChainSystem.sol:IParticipantRegistry"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "registerParticipant(string)",
          "updateParticipant(address,uint256,uint256,string)",
          "recordOffsetActivity(address,uint256,string,string,bool)",
          "getParticipant(address)",
          "isRegistered(address)",
          "getTotalParticipants()",
          "getAllParticipants()",
          "calculatePoints(uint256,bool)",
          "awardReferralBonus(address,address)",
          "updatePointsConfig(uint256,uint256,uint256)",
          "updateContractAddresses(address,address,address)",
          "pause()",
          "unpause()",
          "getTierLevel(address)",
          "getParticipantStats(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ParticipantRegistry",
            "src": "contracts\\ParticipantRegistry.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basePointsPerKgCO2",
            "src": "contracts\\ParticipantRegistry.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "streakBonusMultiplier",
            "src": "contracts\\ParticipantRegistry.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "referralBonus",
            "src": "contracts\\ParticipantRegistry.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "_participants",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(Participant)11906_storage)",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:16"
            },
            {
              "label": "_participantAddresses",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_address)dyn_storage",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:19"
            },
            {
              "label": "_participantIndexes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:22"
            },
            {
              "label": "_totalParticipants",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:25"
            },
            {
              "label": "basePointsPerKgCO2",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:28"
            },
            {
              "label": "streakBonusMultiplier",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:29"
            },
            {
              "label": "referralBonus",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:30"
            },
            {
              "label": "tierManager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:33"
            },
            {
              "label": "pointsToken",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:34"
            },
            {
              "label": "badgeNFT",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Participant)11906_storage)": {
              "label": "mapping(address => struct IParticipantRegistry.Participant)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Participant)11906_storage": {
              "label": "struct IParticipantRegistry.Participant",
              "members": [
                {
                  "label": "wallet",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalPoints",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "currentTier",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "joinDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "lastActivityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "profileHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PointsToken.sol:PointsToken": {
        "src": "contracts\\PointsToken.sol:14",
        "version": {
          "withMetadata": "4c7df90067f050be3654ceea60b20520d6ea0025b89aa4489ea1f22799ddfa7e",
          "withoutMetadata": "e0c5e228e0c8c2b0834937bcfcd35038499c154d6a8f53d5e14055bb42767c86",
          "linkedWithoutMetadata": "e0c5e228e0c8c2b0834937bcfcd35038499c154d6a8f53d5e14055bb42767c86"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/interfaces/IGreenChainSystem.sol:IPointsToken"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "mint(address,uint256,string)",
          "burn(address,uint256,string)",
          "transferPoints(address,address,uint256)",
          "balanceOf(address)",
          "getBalance(address)",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "getPointsStats()",
          "getPointsEarnedInRange(address,uint256,uint256)",
          "updateContractAddresses(address,address)",
          "pause()",
          "unpause()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PointsToken",
            "src": "contracts\\PointsToken.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "participantRegistry",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "PointsToken",
              "src": "contracts\\PointsToken.sol:17"
            },
            {
              "label": "couponExchange",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "PointsToken",
              "src": "contracts\\PointsToken.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/RewardsVault.sol:RewardsVault": {
        "src": "contracts\\RewardsVault.sol:13",
        "version": {
          "withMetadata": "9658c3f3cad766be1d88c96f264dd0a7d1db6b16f73969f7986432767eec500b",
          "withoutMetadata": "20658fb28d08035d734d5dedd78ba7c68ba4b5343a59ae640dcfe0d7ff2eeee6",
          "linkedWithoutMetadata": "20658fb28d08035d734d5dedd78ba7c68ba4b5343a59ae640dcfe0d7ff2eeee6"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/interfaces/IGreenChainSystem.sol:IRewardsVault"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositReward(uint256,uint256)",
          "withdrawReward(uint256,uint256)",
          "getRewardBalance(uint256)",
          "getTotalRewards()",
          "getCouponInventoryStatus(uint256)",
          "hasSufficientInventory(uint256,uint256)",
          "getCouponsWithInventory()",
          "emergencyWithdraw(uint256,uint256)",
          "updateContractAddresses(address,address)",
          "pause()",
          "unpause()",
          "manageInventory(uint256,uint8,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RewardsVault",
            "src": "contracts\\RewardsVault.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "_couponInventory",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RewardsVault",
              "src": "contracts\\RewardsVault.sol:16"
            },
            {
              "label": "_totalRewards",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "RewardsVault",
              "src": "contracts\\RewardsVault.sol:19"
            },
            {
              "label": "couponExchange",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "RewardsVault",
              "src": "contracts\\RewardsVault.sol:22"
            },
            {
              "label": "participantRegistry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RewardsVault",
              "src": "contracts\\RewardsVault.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TierManager.sol:TierManager": {
        "src": "contracts\\TierManager.sol:12",
        "version": {
          "withMetadata": "221dbb57cacae63685c6a9a0f81726565449e1eb95486a94fdba7c854bd95a2f",
          "withoutMetadata": "45966cc06e88aa8965185bd1bfa9820e66fbcbc1f403fde76cd12e2ddb2f7c6d",
          "linkedWithoutMetadata": "45966cc06e88aa8965185bd1bfa9820e66fbcbc1f403fde76cd12e2ddb2f7c6d"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/interfaces/IGreenChainSystem.sol:ITierManager"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calculateTier(uint256)",
          "getTierInfo(uint8)",
          "getTierMultiplier(uint8)",
          "getTierCouponBonus(uint8)",
          "hasPriorityAccess(uint8)",
          "hasExclusiveAccess(uint8)",
          "hasVipAccess(uint8)",
          "getNextTierRequirements(uint8)",
          "checkTierUpgrade(uint256,uint8)",
          "getTierBenefits(uint8)",
          "updateTierConfig(uint8,(uint256,uint256,uint256,uint256,bool,bool,bool,string))",
          "updateContractAddresses(address,address)",
          "pause()",
          "unpause()",
          "upgradeTier(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TierManager",
            "src": "contracts\\TierManager.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_tierConfigs",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_enum(Tier)11972,t_struct(TierInfo)11989_storage)",
              "contract": "TierManager",
              "src": "contracts\\TierManager.sol:15"
            },
            {
              "label": "participantRegistry",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TierManager",
              "src": "contracts\\TierManager.sol:18"
            },
            {
              "label": "badgeNFT",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TierManager",
              "src": "contracts\\TierManager.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(Tier)11972": {
              "label": "enum ITierManager.Tier",
              "members": [
                "BRONZE",
                "SILVER",
                "GOLD",
                "PLATINUM"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(Tier)11972,t_struct(TierInfo)11989_storage)": {
              "label": "mapping(enum ITierManager.Tier => struct ITierManager.TierInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TierInfo)11989_storage": {
              "label": "struct ITierManager.TierInfo",
              "members": [
                {
                  "label": "minPoints",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxPoints",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "multiplier",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "couponBonus",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "hasPriorityAccess",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "hasExclusiveProjects",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "4"
                },
                {
                  "label": "hasVipAccess",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "4"
                },
                {
                  "label": "badgeURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:IBadgeNFT": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:67",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mintBadge(address,string,string,string,string)",
          "getBadge(uint256)",
          "getUserBadges(address)",
          "updateBadge(uint256,string)",
          "burnBadge(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:ICouponExchange": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:89",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createCoupon(string,string,uint256,uint256,string,uint256)",
          "purchaseCoupon(uint256)",
          "redeemCoupon(uint256)",
          "getCoupon(uint256)",
          "getUserCoupons(address)",
          "getAvailableCoupons()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:IParticipantRegistry": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerParticipant(string)",
          "updateParticipant(address,uint256,uint256,string)",
          "getParticipant(address)",
          "isRegistered(address)",
          "getTotalParticipants()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:IPointsToken": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256,string)",
          "burn(address,uint256,string)",
          "transferPoints(address,address,uint256)",
          "balanceOf(address)",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:IRewardsVault": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:123",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositReward(uint256,uint256)",
          "withdrawReward(uint256,uint256)",
          "getRewardBalance(uint256)",
          "getTotalRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:ITierManager": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calculateTier(uint256)",
          "getTierInfo(uint8)",
          "getTierMultiplier(uint8)",
          "getTierCouponBonus(uint8)",
          "updateTierConfig(uint8,(uint256,uint256,uint256,uint256,bool,bool,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC4906.sol:10",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:34"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\utils\\ERC721Utils.sol:16",
        "version": {
          "withMetadata": "b4c81ef105354bd1986e1d565841a38c27bd22d9783130ca2c4ca09406c5c971",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Panic.sol:Panic": {
        "src": "@openzeppelin\\contracts\\utils\\Panic.sol:26",
        "version": {
          "withMetadata": "475e216dbfbf13634f5a46a1e2b9e7eb3380f89234a7854491859eeaf40149d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:13",
        "version": {
          "withMetadata": "4055dada653e57c9dfa9e626ea89be4d93bc703fc86d8f305e39457c0c3b6e46",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:12",
        "version": {
          "withMetadata": "72f841a753df86b24f0efc2c28b0a02e06fe53badfa2162f367375b7041d3b1f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/Panic.sol:Panic"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeCast.sol:19",
        "version": {
          "withMetadata": "d581c33288cfa4779579536496bb900e06fbf31524ea3ebb013c8a4eff6279bd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:11",
        "version": {
          "withMetadata": "3a7a073fb49a215e66242c641d2dcc99bcd8f9b000228f6c75358cfcbefa4a94",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BadgeNFT.sol:BadgeNFT": {
        "src": "contracts\\BadgeNFT.sol:14",
        "version": {
          "withMetadata": "95f54df8df51491bfadebb26031a2f74f27996e77b36ab26db90224d8f5393be",
          "withoutMetadata": "7b5b3a9ce92f056cb78c47c418fcd8d08b280ddfe40e6fdbc38ff4f145fd979d",
          "linkedWithoutMetadata": "7b5b3a9ce92f056cb78c47c418fcd8d08b280ddfe40e6fdbc38ff4f145fd979d"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/interfaces/IGreenChainSystem.sol:IBadgeNFT"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "mintBadge(address,string,string,string,string)",
          "getBadge(uint256)",
          "getUserBadges(address)",
          "updateBadge(uint256,string)",
          "burnBadge(uint256)",
          "updateContractAddresses(address,address)",
          "pause()",
          "unpause()",
          "tokenURI(uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BadgeNFT",
            "src": "contracts\\BadgeNFT.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:34"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:23"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BadgeNFT",
              "src": "contracts\\BadgeNFT.sol:15"
            },
            {
              "label": "_badges",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(Badge)11337_storage)",
              "contract": "BadgeNFT",
              "src": "contracts\\BadgeNFT.sol:16"
            },
            {
              "label": "_userBadges",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "BadgeNFT",
              "src": "contracts\\BadgeNFT.sol:17"
            },
            {
              "label": "participantRegistry",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "BadgeNFT",
              "src": "contracts\\BadgeNFT.sol:19"
            },
            {
              "label": "tierManager",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "BadgeNFT",
              "src": "contracts\\BadgeNFT.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Badge)11337_storage)": {
              "label": "mapping(uint256 => struct IBadgeNFT.Badge)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Badge)11337_storage": {
              "label": "struct IBadgeNFT.Badge",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "badgeType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "imageURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "earnedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/CouponExchange.sol:CouponExchange": {
        "src": "contracts\\CouponExchange.sol:13",
        "version": {
          "withMetadata": "c862cd94f7c3452e0c91c1634d71f3c19bdff15157afc005e9b9049668cddf85",
          "withoutMetadata": "2526578010aa2aa96ab471eade3b4ff794df92d724d3799aefa17429c89ff40b",
          "linkedWithoutMetadata": "2526578010aa2aa96ab471eade3b4ff794df92d724d3799aefa17429c89ff40b"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/interfaces/IGreenChainSystem.sol:ICouponExchange"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "createCoupon(string,string,uint256,uint256,string,uint256)",
          "purchaseCoupon(uint256)",
          "redeemCoupon(uint256)",
          "getCoupon(uint256)",
          "getUserCoupons(address)",
          "getAvailableCoupons()",
          "getCouponWithTierBonus(uint256,address)",
          "updateCoupon(uint256,bool)",
          "updateContractAddresses(address,address,address,address)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CouponExchange",
            "src": "contracts\\CouponExchange.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "_couponIds",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:14"
            },
            {
              "label": "_userCouponIdCounter",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:15"
            },
            {
              "label": "_coupons",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_struct(Coupon)11414_storage)",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:17"
            },
            {
              "label": "_userCoupons",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(UserCoupon)11427_storage)",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:18"
            },
            {
              "label": "_userCouponIds",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:19"
            },
            {
              "label": "_couponUserCoupons",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:20"
            },
            {
              "label": "pointsToken",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:22"
            },
            {
              "label": "participantRegistry",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:23"
            },
            {
              "label": "tierManager",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:24"
            },
            {
              "label": "rewardsVault",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "CouponExchange",
              "src": "contracts\\CouponExchange.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Coupon)11414_storage)": {
              "label": "mapping(uint256 => struct ICouponExchange.Coupon)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(UserCoupon)11427_storage)": {
              "label": "mapping(uint256 => struct ICouponExchange.UserCoupon)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Coupon)11414_storage": {
              "label": "struct ICouponExchange.Coupon",
              "members": [
                {
                  "label": "couponId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "pointsCost",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "category",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "maxSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "currentSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(UserCoupon)11427_storage": {
              "label": "struct ICouponExchange.UserCoupon",
              "members": [
                {
                  "label": "couponId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "purchaseDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isRedeemed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "redemptionDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "redemptionCode",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/ParticipantRegistry.sol:ParticipantRegistry": {
        "src": "contracts\\ParticipantRegistry.sol:13",
        "version": {
          "withMetadata": "701c69070ff0bdb48a4246b6c20212063679c71275edaabdb71a0b5f99d138f3",
          "withoutMetadata": "fed241ab8f98eb4f49f01fc64d885d8038a64923ff74f85deb0cbbcd192758dc",
          "linkedWithoutMetadata": "fed241ab8f98eb4f49f01fc64d885d8038a64923ff74f85deb0cbbcd192758dc"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/interfaces/IGreenChainSystem.sol:IParticipantRegistry"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "registerParticipant(string)",
          "updateParticipant(address,uint256,uint256,string)",
          "getParticipant(address)",
          "isRegistered(address)",
          "getTotalParticipants()",
          "getAllParticipants()",
          "calculatePoints(uint256,bool)",
          "awardReferralBonus(address,address)",
          "updatePointsConfig(uint256,uint256,uint256)",
          "updateContractAddresses(address,address,address)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ParticipantRegistry",
            "src": "contracts\\ParticipantRegistry.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basePointsPerKgCO2",
            "src": "contracts\\ParticipantRegistry.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "streakBonusMultiplier",
            "src": "contracts\\ParticipantRegistry.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "referralBonus",
            "src": "contracts\\ParticipantRegistry.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "_participants",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(Participant)11110_storage)",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:16"
            },
            {
              "label": "_participantAddresses",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_address)dyn_storage",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:19"
            },
            {
              "label": "_participantIndexes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:22"
            },
            {
              "label": "_totalParticipants",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:25"
            },
            {
              "label": "basePointsPerKgCO2",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:28"
            },
            {
              "label": "streakBonusMultiplier",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:29"
            },
            {
              "label": "referralBonus",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:30"
            },
            {
              "label": "tierManager",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:33"
            },
            {
              "label": "pointsToken",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:34"
            },
            {
              "label": "badgeNFT",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "ParticipantRegistry",
              "src": "contracts\\ParticipantRegistry.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Participant)11110_storage)": {
              "label": "mapping(address => struct IParticipantRegistry.Participant)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Participant)11110_storage": {
              "label": "struct IParticipantRegistry.Participant",
              "members": [
                {
                  "label": "wallet",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalPoints",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "currentTier",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "joinDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "lastActivityDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "profileHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/PointsToken.sol:PointsToken": {
        "src": "contracts\\PointsToken.sol:14",
        "version": {
          "withMetadata": "009967b46745ff1419fa95ca3f9c65a139aeeeeadc4078cb84f662ff164a1155",
          "withoutMetadata": "a26c7c73d9c4ed353ad8d4c132dd6bcccfd243646ff9fad774609c9a28470b23",
          "linkedWithoutMetadata": "a26c7c73d9c4ed353ad8d4c132dd6bcccfd243646ff9fad774609c9a28470b23"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/interfaces/IGreenChainSystem.sol:IPointsToken"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "mint(address,uint256,string)",
          "burn(address,uint256,string)",
          "transferPoints(address,address,uint256)",
          "balanceOf(address)",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "getPointsStats()",
          "getPointsEarnedInRange(address,uint256,uint256)",
          "updateContractAddresses(address,address)",
          "pause()",
          "unpause()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PointsToken",
            "src": "contracts\\PointsToken.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "participantRegistry",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "PointsToken",
              "src": "contracts\\PointsToken.sol:17"
            },
            {
              "label": "couponExchange",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "PointsToken",
              "src": "contracts\\PointsToken.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/RewardsVault.sol:RewardsVault": {
        "src": "contracts\\RewardsVault.sol:13",
        "version": {
          "withMetadata": "8718b46e18caae1822b4f866bd5b6506c05e008634a8562e603a97a84e5eff7f",
          "withoutMetadata": "06d5391684c8529592ce58f091f0f27721ae1c314e405f8868172dabcf2915c1",
          "linkedWithoutMetadata": "06d5391684c8529592ce58f091f0f27721ae1c314e405f8868172dabcf2915c1"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/interfaces/IGreenChainSystem.sol:IRewardsVault"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "depositReward(uint256,uint256)",
          "withdrawReward(uint256,uint256)",
          "getRewardBalance(uint256)",
          "getTotalRewards()",
          "getCouponInventoryStatus(uint256)",
          "hasSufficientInventory(uint256,uint256)",
          "getCouponsWithInventory()",
          "emergencyWithdraw(uint256,uint256)",
          "updateContractAddresses(address,address)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RewardsVault",
            "src": "contracts\\RewardsVault.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "_couponInventory",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RewardsVault",
              "src": "contracts\\RewardsVault.sol:16"
            },
            {
              "label": "_totalRewards",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "RewardsVault",
              "src": "contracts\\RewardsVault.sol:19"
            },
            {
              "label": "couponExchange",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "RewardsVault",
              "src": "contracts\\RewardsVault.sol:22"
            },
            {
              "label": "participantRegistry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RewardsVault",
              "src": "contracts\\RewardsVault.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TierManager.sol:TierManager": {
        "src": "contracts\\TierManager.sol:12",
        "version": {
          "withMetadata": "508a09672f62f1aa174fbd4c17a04f0c3dc6d5be8e3ac0249159680e951b232b",
          "withoutMetadata": "d88921c86be6768f123ea204aaf830e7d7de17efc4bf152c020ef1c6a8b40b71",
          "linkedWithoutMetadata": "d88921c86be6768f123ea204aaf830e7d7de17efc4bf152c020ef1c6a8b40b71"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/interfaces/IGreenChainSystem.sol:ITierManager"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calculateTier(uint256)",
          "getTierInfo(uint8)",
          "getTierMultiplier(uint8)",
          "getTierCouponBonus(uint8)",
          "hasPriorityAccess(uint8)",
          "hasExclusiveAccess(uint8)",
          "hasVipAccess(uint8)",
          "getNextTierRequirements(uint8)",
          "getTierBenefits(uint8)",
          "updateTierConfig(uint8,(uint256,uint256,uint256,uint256,bool,bool,bool,string))",
          "updateContractAddresses(address,address)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TierManager",
            "src": "contracts\\TierManager.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_tierConfigs",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_enum(Tier)11176,t_struct(TierInfo)11193_storage)",
              "contract": "TierManager",
              "src": "contracts\\TierManager.sol:15"
            },
            {
              "label": "participantRegistry",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TierManager",
              "src": "contracts\\TierManager.sol:18"
            },
            {
              "label": "badgeNFT",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TierManager",
              "src": "contracts\\TierManager.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(Tier)11176": {
              "label": "enum ITierManager.Tier",
              "members": [
                "BRONZE",
                "SILVER",
                "GOLD",
                "PLATINUM"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(Tier)11176,t_struct(TierInfo)11193_storage)": {
              "label": "mapping(enum ITierManager.Tier => struct ITierManager.TierInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TierInfo)11193_storage": {
              "label": "struct ITierManager.TierInfo",
              "members": [
                {
                  "label": "minPoints",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxPoints",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "multiplier",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "couponBonus",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "hasPriorityAccess",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "hasExclusiveProjects",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "4"
                },
                {
                  "label": "hasVipAccess",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "4"
                },
                {
                  "label": "badgeURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:IBadgeNFT": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:67",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mintBadge(address,string,string,string,string)",
          "getBadge(uint256)",
          "getUserBadges(address)",
          "updateBadge(uint256,string)",
          "burnBadge(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:ICouponExchange": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:89",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createCoupon(string,string,uint256,uint256,string,uint256)",
          "purchaseCoupon(uint256)",
          "redeemCoupon(uint256)",
          "getCoupon(uint256)",
          "getUserCoupons(address)",
          "getAvailableCoupons()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:IParticipantRegistry": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerParticipant(string)",
          "updateParticipant(address,uint256,uint256,string)",
          "getParticipant(address)",
          "isRegistered(address)",
          "getTotalParticipants()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:IPointsToken": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256,string)",
          "burn(address,uint256,string)",
          "transferPoints(address,address,uint256)",
          "balanceOf(address)",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:IRewardsVault": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:123",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositReward(uint256,uint256)",
          "withdrawReward(uint256,uint256)",
          "getRewardBalance(uint256)",
          "getTotalRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IGreenChainSystem.sol:ITierManager": {
        "src": "contracts\\interfaces\\IGreenChainSystem.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calculateTier(uint256)",
          "getTierInfo(uint8)",
          "getTierMultiplier(uint8)",
          "getTierCouponBonus(uint8)",
          "updateTierConfig(uint8,(uint256,uint256,uint256,uint256,bool,bool,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    }
  ]
}